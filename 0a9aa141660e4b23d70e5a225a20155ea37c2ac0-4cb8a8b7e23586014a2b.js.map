{"version":3,"file":"0a9aa141660e4b23d70e5a225a20155ea37c2ac0-4cb8a8b7e23586014a2b.js","mappings":"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","sources":["webpack://csb_site/./src/assets/menus.tsx","webpack://csb_site/./src/components/Common/DetailMenu.tsx","webpack://csb_site/./src/components/Layout/TabLayout/TempLayout.tsx","webpack://csb_site/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://csb_site/./node_modules/framer-motion/dist/es/value/types/utils.mjs"],"sourcesContent":["import { MenuType } from '@src/types';\n\nexport const HelpMenus: MenuType[] = [\n  {\n    title: '문의사항',\n    to: '/help',\n  },\n  {\n    title: 'FAQ',\n    to: '/help/faq',\n  },\n  {\n    title: '공지사항',\n    to: '/help/notice',\n  },\n  {\n    title: '오시는길',\n    to: '/help/way',\n  },\n];\n\nexport const IntroMenus: MenuType[] = [\n  {\n    title: '대표소개',\n    to: '/introduction',\n  },\n  {\n    title: '조직도',\n    to: '/introduction/organization',\n  },\n  {\n    title: '회사 비전',\n    to: '/introduction/vision',\n  },\n];\n","import React, { useState } from 'react';\nimport { MenuType } from '@src/types';\nimport { Link } from 'gatsby';\n\ninterface IProps {\n  menus: MenuType[];\n}\n\nconst DetailMenu = ({ menus }: IProps) => {\n  const [isActive, setIsActive] = useState<string>('');\n\n  return (\n    <div className='flex justify-center gap-x-20 mx-8 p-8 h-20 items-center text-accent text-lg font-bold'>\n      {menus.map((menu) => {\n        return (\n          <Link\n            key={menu.title}\n            to={menu.to}\n            getProps={({ isCurrent }) => {\n              if (isCurrent) {\n                setIsActive(menu.title);\n              }\n              return '';\n            }}\n            className={`\n              ${\n                isActive === menu.title\n                  ? 'after:transition-none '\n                  : 'after:scale-x-0 after:hover:transition-all after:hover:ease-in-out after:hover:duration-200 after:hover:scale-100 '\n              }\n              relative leading-10 after:box-border after:bg-accent/[.50] after:w-full after:h-1 after:absolute after:left-0 after:bottom-0\n            `}\n          >\n            {menu.title}\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default DetailMenu;\n","import Layout from '@src/components/layout';\nimport Title from '@src/components/Common/Title';\nimport DetailMenu from '@src/components/Common/DetailMenu';\nimport React from 'react';\nimport { MenuType } from '@src/types';\n\ninterface IProps extends React.PropsWithChildren {\n  title: string;\n  menus: MenuType[];\n}\n\nconst TempLayout = ({ children, title, menus }: IProps) => {\n  return (\n    <Layout>\n      <Title title={title} isSplit={true} />\n      <DetailMenu menus={menus} />\n      {children}\n    </Layout>\n  );\n};\n\nexport default TempLayout;\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n"],"names":["HelpMenus","title","to","IntroMenus","_ref","menus","isActive","setIsActive","useState","React","className","map","menu","Link","key","getProps","_ref2","isCurrent","children","Layout","Title","isSplit","DetailMenu","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","schedule","cancel","cancelFrame","state","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","keepAlive","immediate","addToCurrentFrame","queue","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","createRenderBatcher","requestAnimationFrame","noop","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","getValueAsType","type","transform","round","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","default","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","callbackName","info","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","pipe","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","interpolate","calculatedDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","clamp","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","reverse","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","progress","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","complex","maxDefaults","applyDefaultFilter","slice","split","number","match","unit","defaultValue","functionRegex","filter","getAnimatableNone","functions","defaultValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","MotionGlobalConfig","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","from","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","testValueType","dimensionValueTypes","vw","vh","parse","findDimensionValueType","find","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notify","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","parseFloat","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","createTransformer","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","output","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","_b","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","token","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","unsubscribe","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","checkStringStartsWith","isCSSVariableName","isCSSVariableToken","cssVariableRegex","addUniqueItem","arr","item","removeItem","warning","invariant","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","alpha","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","numValues","blendValue","fromThis","mixObject","originStats","targetStats","numVars","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","input","isClamp","inputLength","interpolator","progressInRange","isBrowser","any","defaultOffset","remaining","offsetProgress","fillOffset","combineFunctions","transformers","toFromDifference","SubscriptionManager","subscriptions","numSubscriptions","getSize","useConstant","init","useIsomorphicLayoutEffect","useLayoutEffect","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","r","parseInt","alpha$1","rgbUnit","clampRgbUnit","isColorString","testProp","splitColor","aName","bName","cName","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","parseComplexValue","convertNumbersToZero","transformer","createUnitType","endsWith","degrees","percent","progressPercentage","sanitize","floatRegex","colorRegex","singleColorRegex","isString"],"sourceRoot":""}